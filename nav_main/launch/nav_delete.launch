<launch>
	<include file="$(find dashgo_driver)/launch/driver_imu.launch"/>
	<include file="$(find ydlidar)/launch/ydlidar1_up.launch"/>
	<!-- <include file="$(find dashgo_description)/launch/dashgo_description.launch"/> -->
		<arg name="map_file" default="$(find nav_main)/maps/HOME_TDP_TUNEADO.yaml"/>
		<node name="map_server_amcl" pkg="map_server_custom" type="map_server_custom" args="$(arg map_file)" />
		<rosparam file="$(arg map_file)" command="load" ns="map" />
		<arg name="initial_pose_x" default="0.0"/> 
		<arg name="initial_pose_y" default="0.0"/> 
		<arg name="initial_pose_a" default="0.0"/>
	<include file="$(find nav_main)/launch/include/imu/amcl_wo_map_topic.launch.xml">
		<arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
		<arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
		<arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
	</include>
	<include file="$(find nav_main)/launch/include/imu/teb_move_base.launch"/>
	<arg name="base_frame" default="base_footprint"/> 
  	<node name="robot_pose_publisher" pkg="robot_pose_publisher" type="robot_pose_publisher" >
      <param name="base_frame" value="$(arg base_frame)"/>
  	</node>
	<!-- <node pkg="laser_filters" type="scan_to_scan_filter_chain" output="screen" name="laser_filter">
		<rosparam command="load" file="$(find nav_main)/filters/laser_config.yaml" />
	</node> -->
	<node name="get_scan_data" pkg="nav_main" type="get_scan_data.py" respawn="true" />
</launch>
